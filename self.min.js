/* Self v0.1.2 https://github.com/munro/self
 * https://github.com/munro/self/blob/master/LICENSE */var Self=function(){function c(){return c.extend.apply(c,arguments)}function d(b){return function(c){return a(b,c)}}function e(a){return function(b){var c;for(c in b)typeof a.prototype[c]=="undefined"&&!Object.hasOwnProperty(c)&&(a.prototype[c]=b[c])}}"use strict";var a,b;return c.VERSION="0.1.2",typeof Object.create=="function"?b=Object.create:b=function(a){function b(){}return b.prototype=a,new b},a=function(a,c){function g(){var a;return this===(typeof window=="undefined"?global:window)||typeof this=="undefined"?a=b(g.prototype):a=this,typeof a.initialize=="function"&&a.initialize.apply(a,arguments),a}var f;g.prototype=b(a.prototype),g.__super__=a.prototype,g.extend=d(g),g.mixin=e(g);for(f in c)Object.hasOwnProperty(f)||(typeof c[f]=="function"?function(a){g.prototype[f]=function(){var b=Array.prototype.slice.call(arguments,0);return b.splice(0,0,this),a.apply(this,b)}}(c[f]):g.prototype[f]=c[f]);return g},c.__super__=Object.prototype,c.extend=function(b,d){return typeof d=="undefined"?a(c,b):a(c.create(b),d)},c.mixin=e(c),c.create=function(a){function f(){var c;return this===(typeof window=="undefined"?global:window)||typeof this=="undefined"?c=b(f.prototype):c=this,a.apply(c,arguments),c}var c;return f.__super__=Object.prototype,f.extend=d(f),f.mixin=e(f),f.prototype=b(a.prototype),f.prototype.initialize=function g(){var b;if(!g._proto_hack)return g._proto_hack=!0,g._previous_init=this.initialize,this.initialize=a.prototype.initialize,b=a.apply(this,arguments),this.initialize=g._previous_init,delete g._proto_hack,delete g._previous_init,b},f},c}();typeof global!="undefined"&&typeof module!="undefined"&&(module.exports=Self);